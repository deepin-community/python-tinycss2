From: Scott Kitterman <scott@kitterman.com>
Date: Fri, 9 Aug 2019 16:04:57 -0400
Subject: Restore missing docs dir from github

---
 docs/conf.py             |  77 +++++++++++++++++++++++
 docs/css_diagram_role.py |  20 ++++++
 docs/index.rst           | 155 +++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 252 insertions(+)
 create mode 100644 docs/conf.py
 create mode 100644 docs/css_diagram_role.py
 create mode 100644 docs/index.rst

diff --git a/docs/conf.py b/docs/conf.py
new file mode 100644
index 0000000..9a2e9f0
--- /dev/null
+++ b/docs/conf.py
@@ -0,0 +1,77 @@
+#!/usr/bin/env python3
+# tinycss2 documentation build configuration file.
+
+import sys
+from pathlib import Path
+
+PATH = Path(__file__).parent
+
+sys.path.append(str(PATH))
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
+extensions = [
+    'sphinx.ext.autodoc', 'sphinx.ext.intersphinx', 'css_diagram_role']
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The suffix of source filenames.
+source_suffix = '.rst'
+
+# The master toctree document.
+master_doc = 'index'
+
+# General information about the project.
+project = 'tinycss2'
+copyright = '2013-2019, Simon Sapin and contributors'
+
+# The version info for the project you're documenting, acts as replacement for
+# |version| and |release|, also used in various other places throughout the
+# built documents.
+#
+# The full version, including alpha/beta/rc tags.
+release = (PATH.parent / 'tinycss2' / 'VERSION').read_text()
+
+# The short X.Y version.
+version = '.'.join(release.split('.')[:2])
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+exclude_patterns = ['_build']
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+html_theme = 'sphinx_rtd_theme'
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = []
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'tinycss2doc'
+
+# One entry per manual page. List of tuples
+# (source start file, name, description, authors, manual section).
+man_pages = [
+    ('index', 'tinycss2', 'tinycss2 Documentation',
+     ['Simon Sapin and contributors'], 1)
+]
+
+# Grouping the document tree into Texinfo files. List of tuples
+# (source start file, target name, title, author,
+#  dir menu entry, description, category)
+texinfo_documents = [
+  ('index', 'tinycss2', 'tinycss2 Documentation',
+   'Simon Sapin', 'tinycss2', 'One line description of project.',
+   'Miscellaneous'),
+]
+
+# Example configuration for intersphinx: refer to the Python standard library.
+intersphinx_mapping = {
+    'python': ('http://docs.python.org/', None),
+    'webencodings': ('http://pythonhosted.org/webencodings/', None)}
diff --git a/docs/css_diagram_role.py b/docs/css_diagram_role.py
new file mode 100644
index 0000000..2a68889
--- /dev/null
+++ b/docs/css_diagram_role.py
@@ -0,0 +1,20 @@
+"""
+A Sphinx extension adding a 'css' role creating links to
+the spec’s railroad diagrams.
+
+"""
+
+from docutils import nodes
+
+
+def role_fn(_name, rawtext, text, lineno, inliner, options={}, content=()):
+    ref = 'http://dev.w3.org/csswg/css-syntax-3/#%s-diagram' % text.replace(
+        ' ', '-')
+    if text.endswith(('-token', '-block')):
+        text = '<%s>' % text
+    ref = nodes.reference(rawtext, text, refuri=ref, **options)
+    return [ref], []
+
+
+def setup(app):
+    app.add_role_to_domain('py', 'diagram', role_fn)
diff --git a/docs/index.rst b/docs/index.rst
new file mode 100644
index 0000000..48da8aa
--- /dev/null
+++ b/docs/index.rst
@@ -0,0 +1,155 @@
+.. See https://github.com/sphinx-doc/sphinx/issues/2103
+
+.. toctree::
+   :hidden:
+   :maxdepth: 3
+
+   index
+
+
+.. include:: ../README.rst
+
+Installation
+============
+
+Installing tinycss2 with pip_ should Just Work::
+
+    pip install tinycss2
+
+This will also automatically install tinycss2’s only dependency, webencodings_.
+tinycss2 and webencodings both only contain Python code and should work on any
+Python implementation, although they’re only tested on CPython.
+
+.. _pip: http://pip-installer.org/
+.. _webencodings: http://pythonhosted.org/webencodings/
+
+
+.. _parsing:
+
+Parsing
+=======
+
+tinycss2 is “low-level” in that it doesn’t parse all of CSS:
+it doesn’t know about the syntax of any specific properties or at-rules.
+Instead, it provides a set of functions that can be composed
+to support exactly the parts of CSS you’re interested in,
+including new or non-standard rules or properties,
+without modifying tinycss or having a complex hook/plugin system.
+
+In many cases, parts of the parsed values
+(such as the :attr:`~tinycss2.ast.AtRule.content`
+of a :class:`~tinycss2.ast.AtRule`)
+is given as :term:`component values` that can be parsed further
+with other functions.
+
+.. module:: tinycss2
+.. autofunction:: parse_stylesheet_bytes
+.. autofunction:: parse_stylesheet
+.. autofunction:: parse_rule_list
+.. autofunction:: parse_one_rule
+.. autofunction:: parse_declaration_list
+.. autofunction:: parse_one_declaration
+.. autofunction:: parse_component_value_list
+.. autofunction:: parse_one_component_value
+
+
+.. _serialization:
+
+Serialization
+=============
+
+In addition to each node’s a :meth:`~tinycss2.ast.Node.serialize` method,
+some serialization-related functions are available:
+
+.. autofunction:: serialize
+.. autofunction:: serialize_identifier
+
+
+.. module:: tinycss2.color3
+
+Color
+=====
+
+.. autofunction:: parse_color
+.. autoclass:: RGBA
+
+
+.. module:: tinycss2.nth
+
+<An+B>
+======
+
+.. autofunction:: parse_nth
+
+
+.. module:: tinycss2.ast
+
+AST nodes
+=========
+
+Various parsing functions return a **node** or a list of nodes.
+Some types of nodes contain nested nodes which may in turn contain more nodes,
+forming together an **abstract syntax tree**.
+
+Although you typically don’t need to import it,
+the :mod:`tinycss2.ast` module defines a class for every type of node.
+
+.. autoclass:: Node()
+
+.. autoclass:: QualifiedRule()
+.. autoclass:: AtRule()
+.. autoclass:: Declaration()
+
+
+Component values
+----------------
+
+.. autoclass:: ParseError()
+.. autoclass:: Comment()
+.. autoclass:: WhitespaceToken()
+.. autoclass:: LiteralToken()
+.. autoclass:: IdentToken()
+.. autoclass:: AtKeywordToken()
+.. autoclass:: HashToken()
+.. autoclass:: StringToken()
+.. autoclass:: URLToken()
+.. autoclass:: UnicodeRangeToken()
+.. autoclass:: NumberToken()
+.. autoclass:: PercentageToken()
+.. autoclass:: DimensionToken()
+.. autoclass:: ParenthesesBlock()
+.. autoclass:: SquareBracketsBlock()
+.. autoclass:: CurlyBracketsBlock()
+.. autoclass:: FunctionBlock()
+
+
+Glossary
+========
+
+.. currentmodule:: tinycss2.ast
+.. glossary::
+
+    Component value
+    Component values
+        A :class:`ParseError`,
+        :class:`WhitespaceToken`,
+        :class:`LiteralToken`,
+        :class:`IdentToken`,
+        :class:`AtKeywordToken`,
+        :class:`HashToken`,
+        :class:`StringToken`,
+        :class:`URLToken`,
+        :class:`NumberToken`,
+        :class:`PercentageToken`,
+        :class:`DimensionToken`,
+        :class:`UnicodeRangeToken`,
+        :class:`ParenthesesBlock`,
+        :class:`SquareBracketsBlock`,
+        :class:`CurlyBracketsBlock`,
+        :class:`FunctionBlock`,
+        or :class:`Comment`
+        object.
+
+
+.. currentmodule:: tinycss2
+.. include:: ../CHANGES
